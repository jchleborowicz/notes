import java.awt.Desktop

plugins {
    id 'org.asciidoctor.jvm.convert' version '2.4.0'
}

description = 'Learning notes'
version = '0.0.1'

configurations {
    asciidoctorExt
}

dependencies {
    asciidoctorExt("io.spring.asciidoctor:spring-asciidoctor-extensions-block-switch:0.4.2.RELEASE")
}

repositories {
    mavenCentral()
    maven {
        url "https://repo.spring.io/release"
        mavenContent {
            includeGroup "io.spring.asciidoctor"
        }
    }
}

asciidoctorj {
    modules {
        pdf {
            version '1.5.0-beta.8'
        }
    }
    fatalWarnings ".*"
}

asciidoctor {
    baseDirFollowsSourceDir()
    configurations 'asciidoctorExt'
    sources {
        include '*.adoc'
    }

    resources {
        from(sourceDir) {
            include 'images/**/*', 'stylesheets/*', 'tocbot-3.0.2/*'
        }
    }

    logDocuments = true
    outputOptions {
        backends = ["html5", "pdf"]
    }

    options doctype: 'book', eruby: 'erubis'
    attributes = [
            'icons'             : 'font',
            'idprefix'          : '',
            'idseparator'       : '-',
            docinfo             : '',
            sectanchors         : '',
            sectnums            : '',
            'source-highlighter': 'coderay@', // TODO switch to 'rouge' once supported by the html5 backend
            stylesdir           : 'stylesheets/',
            stylesheet          : 'main.css',
            'spring-version'    : project.version
    ]
}

build.dependsOn asciidoctor

final asciidocGeneratedDocs = "${buildDir}/docs/asciidoc/html5"

task upload() {
    group 'Html operations'
    description 'Uploads html pages to s3.'

    dependsOn asciidoctor

    inputs.dir asciidocGeneratedDocs
    outputs.upToDateWhen { true }

    doLast {
        exec {
            commandLine 'aws', '--profile', awsProfile, 's3', 'sync', '--delete', asciidocGeneratedDocs, awsTarget
        }
    }
}

static def openFile(File file) {
    Desktop.desktop.browse file.toURI()
}

static def openUrl(String file) {
    Desktop.desktop.browse file.toURI()
}

task openLocal() {
    group 'Html operations'
    description 'Opens local generated html index page.'

    dependsOn asciidoctor

    doLast {
        openFile(new File("$asciidocGeneratedDocs/index.html"))
    }
}

task openRemote() {
    group 'Html operations'
    description 'Opens remote (uploaded) html index page.'

    doLast {
        openUrl(notesUrl)
    }
}
